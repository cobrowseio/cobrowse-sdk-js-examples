"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _i18next = require("i18next");

var _reactI18next = require("react-i18next");

var _moment = _interopRequireDefault(require("moment"));

require("moment/locale/es");

require("moment/locale/fr");

var _translation = _interopRequireDefault(require("./locales/en-us/translation.json"));

var _translation2 = _interopRequireDefault(require("./locales/es/translation.json"));

var _translation3 = _interopRequireDefault(require("./locales/fr/translation.json"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var englishUS = 'en-us';
var spanish = 'es';
var french = 'fr';
var SUPPORTED_LOCALES = [englishUS, spanish, french];
var i18n = (0, _i18next.createInstance)({
  fallbackLng: englishUS,
  debug: process.env.NODE_ENV === 'development',
  lowerCaseLng: true,
  interpolation: {
    escapeValue: false,
    // not needed for react as it escapes by default
    format: function format(value, _format) {
      if (_format === 'dateRelative' && (0, _moment.default)(value).isValid()) {
        return (0, _moment.default)(value).fromNow();
      }
    }
  },
  resources: {
    'en-us': {
      translation: _translation.default
    },
    es: {
      translation: _translation2.default
    },
    fr: {
      translation: _translation3.default
    }
  }
});
i18n.use(_reactI18next.initReactI18next).init();
i18n.on('languageChanged', function (language) {
  // Fall back to US English if we don't currently support the selected language
  if (SUPPORTED_LOCALES.indexOf(language) === -1) {
    _moment.default.locale(englishUS);

    return;
  }

  _moment.default.locale(language);
});
var _default = i18n;
exports.default = _default;